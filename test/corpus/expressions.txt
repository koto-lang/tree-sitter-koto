===========================================================================================
identifiers
===========================================================================================

foo
bar9
underscore_separated
héllø
_
_bar9
_héllø
@main

---

(module
  (identifier)
  (identifier)
  (identifier)
  (identifier)
  (identifier)
  (identifier)
  (identifier)
  (meta)
)

===========================================================================================
comma_separated
===========================================================================================

foo, 'bar', 123

---

(module
  (expressions
    (identifier)
    (string)
    (number)
  )
)

===========================================================================================
tuple_empty
===========================================================================================

(,) 

---

(module
  (tuple)
)

===========================================================================================
tuple_nested
===========================================================================================

(foo, bar, (baz))

---

(module
  (tuple
    (identifier)
    (identifier)
    (tuple
      (identifier))))

===========================================================================================
tuple_nested_multi_line
===========================================================================================

(
  foo, 
  bar
, (baz)
)

---

(module
  (tuple
    (identifier)
    (identifier)
    (tuple
      (identifier))))


===========================================================================================
list_multi_line
===========================================================================================

[
  foo, 
  bar
, (baz)
]

---

(module
  (list
    (identifier)
    (identifier)
    (tuple
      (identifier))))

===========================================================================================
binary_op
===========================================================================================

1 + 2 * 3 + 4

---

(module
  (binary_op
    (binary_op
      (number)
      (binary_op
        (number)
        (number)
      )
    )
    (number)
  )
)

===========================================================================================
binary_op_multi_line_post
===========================================================================================

1 + 
  2 * 
    3 + 
  4

---

(module
  (binary_op
    (binary_op
      (number)
      (binary_op
        (number)
        (number)
      )
    )
    (number)
  )
)


===========================================================================================
binary_op_multi_line_pre
===========================================================================================

1 
  + 2 
    * 3 
  + 4

---

(module
  (binary_op
    (binary_op
      (binary_op
        (number)
        (number)
      )
      (number)
    )
    (number)
  )
)

===========================================================================================
assignment
===========================================================================================

a = 3
b += c = d

---

(module
  (assign
    (identifier)
    (number)
  )
  (modify_assign
    (identifier)
    (assign
      (identifier)
      (identifier)
    )
  )
)

===========================================================================================
return_indented
===========================================================================================

return 
  foo

---

(module
  (return (identifier))
)

===========================================================================================
yield_indented
===========================================================================================

yield 
  foo

---

(module
  (yield (identifier))
)

===========================================================================================
export
===========================================================================================

export foo
export foo = 99

---

(module
  (export (identifier))
  (assign
    (export (identifier))
    (number)
  )
)

===========================================================================================
import
===========================================================================================

import foo
from foo import 'bar'
from foo.bar import x, 'y'
from 'hello' import foo

---

(module
  (import
    (import_items (identifier))
  )
  (import
    (import_module (identifier))
    (import_items (string))
  )
  (import
    (import_module (identifier) (identifier))
    (import_items (identifier) (string))
  )
  (import
    (import_module (string))
    (import_items (identifier))
  )
)

===========================================================================================
try_catch_with_finally
===========================================================================================

try
  throw foo()
catch error
  throw error
finally
  x = 42

---

(module
  (try
    try: (block
      (throw (chain start: (identifier) call: (tuple)))
    )
    catch_arg: (identifier)
    catch: (block
      (throw (identifier))
    )
    finally: (block 
      (assign (identifier) (number))
    )
  )
)

===========================================================================================
try_catch_finally_in_function
===========================================================================================

x = ||
  try
    42
  catch _
    99
  finally
    123

---

(module
  (assign 
    (identifier)
    (function
      body: (block
        (try
          try: (block (number))
          catch_arg: (identifier)
          catch: (block (number))
          finally: (block (number))
        )
      )
    )
  )
)
