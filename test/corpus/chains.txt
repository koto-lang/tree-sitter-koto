===========================================================================================
simple_dot_chain
===========================================================================================

a.b
a.b.c.d.e.f

---

(module
  (chain
    start: (identifier)
    lookup: (identifier)
  )
  (chain
    start: (identifier)
    lookup: (identifier)
    lookup: (identifier)
    lookup: (identifier)
    lookup: (identifier)
    lookup: (identifier)
  )
)

===========================================================================================
index_chain_1
===========================================================================================

a[1]
a[1..]

---

(module
  (chain
    start: (identifier)
    index: (number)
  )
  (chain
    start: (identifier)
    index: (range_from (number))
  )
)


===========================================================================================
index_chain_3
===========================================================================================

a[1][2][3]

---

(module
  (chain
    start: (identifier)
    index: (number)
    index: (number)
    index: (number)
  )
)

===========================================================================================
call_without_parens_1_single_line
===========================================================================================

f x
f -42

---

(module
  (chain
    start: (identifier)
    (call_arg (identifier))
  )
  (chain
    start: (identifier)
    (call_arg (negate (number)))
  )
)

===========================================================================================
call_without_parens_2_single_line
===========================================================================================

f x, y

---

(module
  (chain
    start: (identifier)
    (call_arg (identifier)) (call_arg (identifier))
  )
)

===========================================================================================
call_without_parens_3_single_line
===========================================================================================

f 1, 2, 3

---

(module
  (chain
    start: (identifier)
    (call_arg (number)) (call_arg (number)) (call_arg (number))
  )
)

===========================================================================================
call_without_parens_1_indented
===========================================================================================

f
  x

---

(module
  (chain
    start: (identifier)
    (call_arg (identifier))
  )
)

===========================================================================================
call_without_parens_3_indented
===========================================================================================

f
  1,
  2,
  3

---

(module
  (chain
    start: (identifier)
    (call_arg (number)) (call_arg (number)) (call_arg (number))
  )
)


===========================================================================================
call_without_parens_nested
===========================================================================================

f g 1, 2

---

(module
  (chain
    start: (identifier)
    (call_arg
      (chain
        start: (identifier)
        (call_arg (number)) (call_arg (number))
      )
    )
  )
)

===========================================================================================
call_with_parenthesized_call_as_arg
===========================================================================================

f (g 1)
f (g -1)

---

(module
  (chain
    start: (identifier)
    (call_arg
      (parenthesized
        (chain
          start: (identifier)
          (call_arg (number))
        )
      )
    )
  )
  (chain
    start: (identifier)
    (call_arg
      (parenthesized
        (chain
          start: (identifier)
          (call_arg (negate (number)))
        )
      )
    )
  )
)

===========================================================================================
call_with_parens
===========================================================================================

f()
f(x)
f(g(1, 2))

---

(module
  (chain
    start: (identifier)
    call: (call_args)
  )
  (chain
    start: (identifier)
    call: (call_args (call_arg (identifier)))
  )
  (chain
    start: (identifier)
    call: (call_args
      (call_arg
        (chain
          start: (identifier)
          call: (call_args
            (call_arg (number))
            (call_arg (number))
          )
        )
      )
    )
  )
)

===========================================================================================
call_after_lookup_without_parens
===========================================================================================

f.g x
f.g.h x, y, z

---

(module
  (chain
    start: (identifier)
    lookup: (identifier)
    (call_arg (identifier))
  )
  (chain
    start: (identifier)
    lookup: (identifier)
    lookup: (identifier)
    (call_arg (identifier)) (call_arg (identifier)) (call_arg (identifier))
  )
)

===========================================================================================
call_after_lookup_with_parens
===========================================================================================

f.g(x)
f.g.h(x, y, z)

---

(module
  (chain
    start: (identifier)
    lookup: (identifier)
    call: (call_args (call_arg (identifier)))
  )
  (chain
    start: (identifier)
    lookup: (identifier)
    lookup: (identifier)
    call: (call_args (call_arg (identifier)) (call_arg (identifier)) (call_arg (identifier)))
  )
)

===========================================================================================
paren_free_call_inside_parenthesized_call
===========================================================================================

f.g(a 0, 1, 2)

---

(module
  (chain
    start: (identifier)
    lookup: (identifier)
    call: (call_args
      (call_arg
        (chain
          start: (identifier)
          (call_arg (number)) (call_arg (number)) (call_arg (number))
        )
      )
    )
  )
)

===========================================================================================
dots_and_calls_single_line
===========================================================================================

a.b()
a.b().c
a.b().c()

---

(module
  (chain
    start: (identifier)
    lookup: (identifier)
    call: (call_args)
  )
  (chain
    start: (identifier)
    lookup: (identifier)
    call: (call_args)
    lookup: (identifier)
  )
  (chain
    start: (identifier)
    lookup: (identifier)
    call: (call_args)
    lookup: (identifier)
    call: (call_args)
  )
)

===========================================================================================
dots_and_calls_multi_line
===========================================================================================

foo
  .bar()

---

(module
  (chain
    start: (identifier)
    lookup: (identifier)
    call: (call_args)
  )
)

===========================================================================================
null_check
===========================================================================================

foo?.bar

---

(module
  (chain
    start: (identifier)
    (null_check)
    lookup: (identifier)
  )
)
